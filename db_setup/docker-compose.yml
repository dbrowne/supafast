# docker-compose.yml

services:
  perf_postgres:
    build:
      context: ./docker/perftesting
      dockerfile: perf_pg_dockerfile
    container_name: perf_pg_${PROJECT_NAME:-perf}_${ENVIRONMENT:-dev}
    hostname: perf_pg_${ENVIRONMENT:-dev}
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: postgres
      AV_USER_PASSWORD: ${AV_USER_PASSWORD:-av_password}
      TZ: UTC
    ports:
      - "${DB_PORT:-6435}:5432"  # Non-standard port
    volumes:
      - perf_pg_data:/var/lib/postgresql/perf_data
      - perf_pg_archive:/perf_archive
      - ./backups:/perf_backups
    networks:
      ts_pg_net:
        ipv4_address: 172.28.1.3
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G

  perf_pg_admin:
    image: dpage/pgadmin4:latest
    container_name: perf_pg_admin_${PROJECT_NAME:-av}_${ENVIRONMENT:-dev}
    environment:
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@av.com}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT:-6051}:80"  # Non-standard port
    volumes:
      - dev_pg_admin_data:/var/lib/perf_pgadmin
    networks:
      ts_pg_net:
        ipv4_address: 172.28.1.3
    depends_on:
      - ts_postgres